<?php
// automatically generated by the FlatBuffers compiler, do not modify

namespace MRD;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class TheTable extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return TheTable
     */
    public static function getRootAsTheTable(ByteBuffer $bb)
    {
        $obj = new TheTable();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function TheTableIdentifier()
    {
        return "MRD2";
    }

    public static function TheTableBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::TheTableIdentifier());
    }

    public static function TheTableExtension()
    {
        return "mrd2";
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return TheTable
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    public function getData()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startTheTable(FlatBufferBuilder $builder)
    {
        $builder->StartObject(1);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return TheTable
     */
    public static function createTheTable(FlatBufferBuilder $builder, $data)
    {
        $builder->startObject(1);
        self::addData($builder, $data);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addData(FlatBufferBuilder $builder, $data)
    {
        $builder->addOffsetX(0, $data, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endTheTable(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }

    public static function finishTheTableBuffer(FlatBufferBuilder $builder, $offset)
    {
        $builder->finish($offset, "MRD2");
    }
}
