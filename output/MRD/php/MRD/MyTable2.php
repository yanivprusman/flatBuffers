<?php
// automatically generated by the FlatBuffers compiler, do not modify

namespace MRD;

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class MyTable2 extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return MyTable2
     */
    public static function getRootAsMyTable2(ByteBuffer $bb)
    {
        $obj = new MyTable2();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function MyTable2Identifier()
    {
        return "MRD2";
    }

    public static function MyTable2BufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::MyTable2Identifier());
    }

    public static function MyTable2Extension()
    {
        return "mrd2";
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return MyTable2
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    public function getMyData2()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @return sbyte
     */
    public function getMyEnum2()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->bb->getSbyte($o + $this->bb_pos) : \MRD\types::middle;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startMyTable2(FlatBufferBuilder $builder)
    {
        $builder->StartObject(2);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return MyTable2
     */
    public static function createMyTable2(FlatBufferBuilder $builder, $my_data2, $my_enum2)
    {
        $builder->startObject(2);
        self::addMyData2($builder, $my_data2);
        self::addMyEnum2($builder, $my_enum2);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addMyData2(FlatBufferBuilder $builder, $myData2)
    {
        $builder->addOffsetX(0, $myData2, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param sbyte
     * @return void
     */
    public static function addMyEnum2(FlatBufferBuilder $builder, $myEnum2)
    {
        $builder->addSbyteX(1, $myEnum2, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endMyTable2(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }

    public static function finishMyTable2Buffer(FlatBufferBuilder $builder, $offset)
    {
        $builder->finish($offset, "MRD2");
    }
}
