// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_ENUM100_MRD_H_
#define FLATBUFFERS_GENERATED_ENUM100_MRD_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 25 &&
              FLATBUFFERS_VERSION_MINOR == 2 &&
              FLATBUFFERS_VERSION_REVISION == 10,
             "Non-compatible flatbuffers version included");

namespace MRD {

enum types : int8_t {
  types_middle = 0,
  types_server = 1,
  types_client = 2,
  types_MIN = types_middle,
  types_MAX = types_client
};

inline const types (&EnumValuestypes())[3] {
  static const types values[] = {
    types_middle,
    types_server,
    types_client
  };
  return values;
}

inline const char * const *EnumNamestypes() {
  static const char * const names[4] = {
    "middle",
    "server",
    "client",
    nullptr
  };
  return names;
}

inline const char *EnumNametypes(types e) {
  if (::flatbuffers::IsOutRange(e, types_middle, types_client)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamestypes()[index];
}

}  // namespace MRD

#endif  // FLATBUFFERS_GENERATED_ENUM100_MRD_H_
